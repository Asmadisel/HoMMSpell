<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
   xmlns:local="clr-namespace:HoMMSpell"
    xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF" xmlns:av="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="av" x:Class="HoMMSpell.MainWindow"
    >

    <Window.Resources>

    </Window.Resources>



    <Grid x:Name="Main" Background="#FFBADEFF" ShowGridLines="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="col0" Width="Auto">
                <!--<ColumnDefinition.DataContext>
                    <local:ViewModel />
                </ColumnDefinition.DataContext>-->
            </ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="4*"></ColumnDefinition>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.DataContext >

            <local:ViewModel >

            </local:ViewModel>
        </Grid.DataContext>
        <Grid x:Name="LeftBar" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="2" Background="#FF695656">

            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <GridSplitter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" ShowsPreview="True" Height="3" Background="#FF080000" Foreground="#FF060606" BorderBrush="#FF0E0909" HorizontalAlignment="Stretch"/>

            <Grid x:Name="Variables" Grid.Row="0" Grid.Column="0" Background="#FF5FAEC8">
                <Label Content="Выберите элемент" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0"/>

                <Button x:Name="Close" Content="X" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="20" MinHeight="20" Click="Close_Click" Margin="0,0,0,0"/>
                <Button x:Name="Var_Info" Content="?" HorizontalAlignment="Right" Height="20" VerticalAlignment="Bottom" Width="20" Margin="5,5,5,5" Click="Var_Info_Click"/>
                <Grid x:Name="Var_Table" Margin="20,54,20,30" Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" >
                    <Border BorderBrush="Black" BorderThickness="1">
                        <DataGrid x:Name="Variables_Table" CanUserResizeColumns="True" CanUserResizeRows="True" >
                            <DataGrid.Columns>
                                <!--<DataGridTextColumn  Header="ID" Binding="{Binding ID}"></DataGridTextColumn>
                                <DataGridTextColumn  Header="Переменная" Binding="{Binding Name}"></DataGridTextColumn>
                                <DataGridTextColumn  Header="Синоним" Binding="{Binding Syn}"></DataGridTextColumn>
                                <DataGridTextColumn  Header="Значение" Binding="{Binding Value}"></DataGridTextColumn>-->
                            </DataGrid.Columns>

                        </DataGrid>
                    </Border>
                </Grid>
                <Button Content="Создать" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,5" Click="Button_Click"/>
                <!--<DataGrid av:ItemsSource="{av:SampleData ItemCount=5}" HorizontalAlignment="Center" VerticalAlignment="Top" Height="101" Margin="0,58,0,0"/>-->

            </Grid>
            <Grid x:Name="Put" Grid.Row="2" Grid.Column="0" Background="#FFB12929">
                <StackPanel Margin="10,0,10,0">
                    
                <Label Content="Ввод формулы" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <!--На данный моммент выбирается элемент и знак (деления, умнож и т.д. -->
                    <Grid>
                        <!--При старте создаются 2 родных элемента, создание нового элемента добавляет в экспандер ещё один-->
                        <Expander x:Name="InsertExpander" Header="Выбор элемента" IsExpanded="True" >
                            <ListBox x:Name="AllVarList">
                                <ListBox.ItemTemplate>
                                    <DataTemplate >
                                        <Grid Margin="0,0,0,5" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="100" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Name}" />

                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        <!--<ItemsControl Name="AllVarList">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,0,0,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="100" />
                                        </Grid.ColumnDefinitions>
                                        --><!--Создает кнопки соответственно элементу в коллекции-->
                                            <!--<TextBlock Text="{Binding Path=(ItemsControl.AlternationIndex)}"/>--><!--
                                        <Button Content="{Binding Name}" Click="Button_Click_1" />

                                        </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>-->
                            
                            
                                <!--<Button x:Name="InsertButtonSP" Content="a" HorizontalContentAlignment="Left" HorizontalAlignment="Left" MinWidth="40"/>
                                <Button x:Name="InsertButtonKN" Content="a" HorizontalContentAlignment="Left" HorizontalAlignment="Left" MinWidth="40"/>-->
                          

                        </Expander>
                    </Grid>
                    <StackPanel x:Name="StackButtons" Orientation="Horizontal" HorizontalAlignment="Center">
                        <!--Кнопки: добавить существующую переменную, +, -, x, /, очистить-->
                        <Button x:Name="AddPlus" Content="+" MinWidth="20" MinHeight="20" Click="AddPlus_Click"/>
                        <Button x:Name="AddMinus" Content="-" MinWidth="20" MinHeight="20" Click="AddMinus_Click"/>
                        <Button x:Name="AddMult" Content="X" MinWidth="20" MinHeight="20" Click="AddMult_Click"/>
                        <Button x:Name="AddDivision" Content="÷" MinWidth="20" MinHeight="20" Click="AddDivision_Click"/>
                        <Button x:Name="AddDLvl" Content="LvL" MinWidth="20" MinHeight="20" Click="AddDLvl_Click" />
                    </StackPanel>


                    <!--<TextBlock  HorizontalAlignment="Center" Height="19" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="92"/>-->


                   
                        <Label Content="Вывод" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="1"/>
                    <TextBox x:Name="PutBlock" MinWidth="30" MinHeight="30" Background="#33E2D3D3" VerticalAlignment="Center" Panel.ZIndex="-2" RenderTransformOrigin="0.5,0.5" TextWrapping="Wrap" Text="{Binding PutBlockText}" TextChanged="PutBlock_TextChanged"/>
  <!-- Ниже находится в будущем скрываемый текстблок, в котором находится расшифрованная формула из putblock-->
                    <TextBlock x:Name="DecipheredBlock" Text="{Binding DecipheredFormula}"></TextBlock>
                    <Label Content="Уровень:" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="1"/>

                    <TextBox x:Name="LvlTextBox" PreviewTextInput="LvlTextBox_PreviewTextInput" Text="{Binding ChartLvl}" TextChanged="LvlTextBox_TextChanged" ></TextBox>
                  
                    <!-- Вариант со слайдером
                    
                    <Slider x:Name="SlideLvl" Minimum="5" Maximum="40" IsSnapToTickEnabled="True" Ticks="5,10,15,20,25,30,35,40" TickPlacement="BottomRight" HorizontalContentAlignment="Center" VerticalContentAlignment="Stretch" Value="{Binding ChartSize}"/>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Label Content="5" FontSize="8" HorizontalAlignment="Right"/>
                        <Label Content="10" FontSize="8" HorizontalAlignment="Right"/>
                        <Label Content="15" FontSize="8" HorizontalAlignment="Right"/>
                        <Label Content="20" FontSize="8" HorizontalAlignment="Right"/>
                        <Label Content="25" FontSize="8" HorizontalAlignment="Right"/>
                        <Label Content="30" FontSize="8" HorizontalAlignment="Right"/>
                        <Label Content="35" FontSize="8" HorizontalAlignment="Right"/>
                        <Label Content="40" FontSize="8" HorizontalAlignment="Right"/>
                    </StackPanel>                   
                    -->
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Button Content="Очистить" HorizontalAlignment="Right" VerticalAlignment="Top" Command="{Binding ClearChartCommand}"/>
                        <Button Content="Рассчитать" HorizontalAlignment="Right" Margin="10,0,2,0" HorizontalContentAlignment="Center" Command="{Binding BuiltChartCommand}" /> <!--Click="Button_Click_3"-->  
                  
                    </StackPanel>
                    <ListView x:Name="Test" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="80" MinHeight="40" ScrollViewer.VerticalScrollBarVisibility="Disabled" Visibility="Hidden">
                        <ListView.View>
                            <GridView >
                                <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}"/>
                                <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}"/>
                                <GridViewColumn Header="Syn" DisplayMemberBinding="{Binding Syn}"/>
                                <GridViewColumn Header="Count" DisplayMemberBinding="{Binding Value}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>


                </StackPanel>



            </Grid>

        </Grid>
        <GridSplitter Grid.Column="1" Width="3" Background="#FF751414" Grid.RowSpan="3" ShowsPreview="True" VerticalAlignment="Stretch"/>

        <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
            <Button Margin="6" Command="{Binding AddItemCommand}">Add</Button>
            <Button Margin="6" Command="{Binding RemoveItemCommand}">Remove</Button>
            <Button Margin="6" Command="{Binding UpdateItemCommand}">Update</Button>
            <Button Margin="6" Command="{Binding ReplaceItemCommand}">Replace</Button>
            <Button Margin="6" Command="{Binding AddSeriesCommand}">Add Series</Button>
            <Button Margin="6" Command="{Binding RemoveSeriesCommand}">Remove Series</Button>
            <!--<Button Margin="6" Click="Button_Click">Constant changes</Button>-->
        </StackPanel>
        <lvc:CartesianChart Grid.Column="2" Grid.Row="2"
        Series="{Binding Series}" Title="{Binding Title}"/>
        <Button x:Name="OpenSidebar_Button" Grid.Column="2" Content="»" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="20" MinHeight="20" Visibility="Hidden" Click="OpenSidebar_Button_Click"/>

    </Grid>

</Window>
